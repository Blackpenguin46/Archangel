# Bandit Security Scanning Configuration
# Custom configuration for Python security analysis

# Test selection
tests:
  # Include all security tests
  - B101  # assert_used
  - B102  # exec_used
  - B103  # set_bad_file_permissions
  - B104  # hardcoded_bind_all_interfaces
  - B105  # hardcoded_password_string
  - B106  # hardcoded_password_funcarg
  - B107  # hardcoded_password_default
  - B108  # hardcoded_tmp_directory
  - B110  # try_except_pass
  - B112  # try_except_continue
  - B201  # flask_debug_true
  - B301  # pickle
  - B302  # marshal_loads
  - B303  # md5
  - B304  # des
  - B305  # cipher
  - B306  # mktemp_q
  - B307  # eval
  - B308  # mark_safe
  - B309  # httpsconnection
  - B310  # urllib_urlopen
  - B311  # random
  - B312  # telnetlib
  - B313  # xml_bad_cElementTree
  - B314  # xml_bad_ElementTree
  - B315  # xml_bad_expatreader
  - B316  # xml_bad_expatbuilder
  - B317  # xml_bad_sax
  - B318  # xml_bad_minidom
  - B319  # xml_bad_pulldom
  - B320  # xml_bad_xmlparser
  - B321  # ftplib
  - B322  # input
  - B323  # unverified_context
  - B324  # hashlib_new_insecure_functions
  - B325  # tempnam
  - B401  # import_telnet
  - B402  # import_ftplib
  - B403  # import_pickle
  - B404  # import_subprocess
  - B405  # import_xml_etree
  - B406  # import_xml_sax
  - B407  # import_xml_expat
  - B408  # import_xml_minidom
  - B409  # import_xml_pulldom
  - B410  # import_lxml
  - B411  # import_xmlrpclib
  - B412  # import_httpoxy
  - B413  # import_pycrypto
  - B501  # request_with_no_cert_validation
  - B502  # ssl_with_bad_version
  - B503  # ssl_with_bad_defaults
  - B504  # ssl_with_no_version
  - B505  # weak_cryptographic_key
  - B506  # yaml_load
  - B507  # ssh_no_host_key_verification
  - B601  # paramiko_calls
  - B602  # subprocess_popen_with_shell_equals_true
  - B603  # subprocess_without_shell_equals_true
  - B604  # any_other_function_with_shell_equals_true
  - B605  # start_process_with_a_shell
  - B606  # start_process_with_no_shell
  - B607  # start_process_with_partial_path
  - B608  # hardcoded_sql_expressions
  - B609  # linux_commands_wildcard_injection
  - B610  # django_extra_used
  - B611  # django_rawsql_used
  - B701  # jinja2_autoescape_false
  - B702  # use_of_mako_templates
  - B703  # django_mark_safe

# Skip these tests
skips:
  - B404  # Allow subprocess import (needed for infrastructure automation)
  - B603  # Allow subprocess without shell (controlled usage)
  - B607  # Allow partial paths (for testing)

# Files and directories to exclude
exclude_dirs:
  - '/tests'
  - '/test'
  - '*/tests/*'
  - '*/test/*'
  - '/venv'
  - '/env'
  - '/.venv'
  - '/.env'
  - '/node_modules'
  - '/.git'
  - '/build'
  - '/dist'
  - '/__pycache__'
  - '*.pyc'

# Severity levels: LOW, MEDIUM, HIGH
# Confidence levels: LOW, MEDIUM, HIGH

# Only report issues with medium confidence and above
confidence: MEDIUM

# Report format options: csv,custom,html,json,screen,txt,xml,yaml
format: json

# Aggregate output by vulnerability type
aggregate: vuln

# Show only the report, no code context
msg-template: "{abspath}:{line}: [{test_id}({severity}), {confidence}] {msg}"

# Custom severity overrides
severity:
  # Override specific test severities if needed
  B105: HIGH    # hardcoded_password_string - critical for security
  B106: HIGH    # hardcoded_password_funcarg - critical for security  
  B107: HIGH    # hardcoded_password_default - critical for security
  B201: MEDIUM  # flask_debug_true - important but not critical in all contexts
  B301: HIGH    # pickle - high security risk
  B307: HIGH    # eval - high security risk
  B506: MEDIUM  # yaml_load - medium risk in controlled environments
  B602: HIGH    # subprocess shell=True - high risk for injection
  B608: HIGH    # hardcoded_sql_expressions - high risk for SQL injection

# Custom baseline file (optional)
# baseline: bandit-baseline.json

# Plugin configuration
plugins:
  # Enable all default plugins
  default: true
  
  # Custom plugin paths (if any)
  # paths:
  #   - /path/to/custom/plugins

# Reporting configuration
reports:
  # Generate detailed reports
  include_nosec: false  # Don't include # nosec comments
  
  # Show code context in reports
  context_lines: 3
  
  # Maximum number of issues to report per file
  max_issues: 50

# Allowlist for specific patterns (use with caution)
allowlist:
  # Example: Allow specific hardcoded values for testing
  nosec:
    - B105  # Only if absolutely necessary and well-justified
    
# Custom assert patterns (for B101)
assert_patterns:
  - "assert.*==.*None"
  - "assert.*is.*None"
  - "assert.*in.*"

# Custom hardcoded password patterns (for B105, B106, B107)
password_patterns:
  - "password"
  - "passwd"
  - "pwd"
  - "secret"
  - "token"
  - "key"
  - "api_key"
  - "access_token"
  - "auth_token"
  - "credential"
  - "passphrase"

# Logging configuration
logging:
  # Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
  level: INFO
  
  # Log format
  format: "%(asctime)s %(levelname)s: %(message)s"

# Output configuration
output:
  # File output options
  # file: bandit-report.json
  
  # Console output
  verbose: true
  
  # Show progress bar
  progress: true
  
  # Colorize output
  color: true

# Exclusion patterns for fine-grained control
exclude:
  # Exclude specific files
  files:
    - "*/migrations/*"
    - "*/venv/*"
    - "*/virtualenv/*"
    - "*/.tox/*"
    - "*/build/*"
    - "*/dist/*"
    - "*/__pycache__/*"
    - "*/.*"  # Hidden files
    
  # Exclude files matching patterns
  patterns:
    - "test_*.py"      # Test files
    - "*_test.py"      # Test files
    - "conftest.py"    # Pytest configuration
    - "setup.py"       # Setup scripts
    - "**/migrations/**/*.py"  # Django migrations
    
  # Exclude specific test IDs for specific files
  per_file:
    "config.py":
      - B105  # Allow hardcoded values in config files (if properly secured)
    "settings/*.py":
      - B105  # Allow hardcoded values in settings (if using env vars for production)
    "tests/**/*.py":
      - B101  # Allow asserts in test files
      - B311  # Allow random in test files

# Integration with CI/CD
ci:
  # Exit codes
  exit_zero: false  # Exit with code 1 if issues found
  
  # Thresholds for failing the build
  fail_on:
    severity: MEDIUM    # Fail on MEDIUM or higher severity
    confidence: MEDIUM  # Fail on MEDIUM or higher confidence
    count: 10          # Fail if more than 10 issues found
    
  # Baseline comparison
  baseline_compare: false  # Enable if using baseline files
  
# Custom rules (advanced)
custom_rules:
  # Define custom security patterns
  # This section would contain custom rule definitions
  # if you need project-specific security checks
  
# Performance tuning
performance:
  # Maximum number of files to process in parallel
  workers: 4
  
  # Timeout per file (seconds)
  timeout: 30
  
  # Memory limit per worker (MB)
  memory_limit: 512