# Archangel AI Orchestrator - Main Command & Control
FROM python:3.11-slim

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV HF_HOME=/app/.cache/huggingface
ENV PYTHONPATH=/app
ENV DOCKER_HOST=unix:///var/run/docker.sock

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    wget \
    build-essential \
    pkg-config \
    libssl-dev \
    libffi-dev \
    docker.io \
    docker-compose \
    net-tools \
    iputils-ping \
    telnet \
    netcat-openbsd \
    tcpdump \
    nmap \
    && rm -rf /var/lib/apt/lists/*

# Install Python packages
RUN pip install --no-cache-dir \
    torch \
    transformers \
    datasets \
    huggingface-hub \
    accelerate \
    peft \
    fastapi \
    uvicorn[standard] \
    websockets \
    asyncio \
    aiofiles \
    docker \
    kubernetes \
    redis \
    psycopg2-binary \
    sqlalchemy \
    alembic \
    celery \
    flower \
    prometheus-client \
    grafana-api \
    elasticsearch \
    kibana-api \
    pandas \
    numpy \
    scikit-learn \
    matplotlib \
    seaborn \
    plotly \
    dash \
    streamlit \
    jupyter \
    jupyterlab

# Create application directory
WORKDIR /app

# Copy application files
COPY . /app/

# Create required directories
RUN mkdir -p /app/logs \
             /app/models \
             /app/data \
             /app/reports \
             /app/configs \
             /app/web \
             /var/log/archangel

# Set up Docker group for container management
RUN groupadd docker && usermod -aG docker root

# Copy orchestrator configuration
COPY config/orchestrator_config.json /app/config/

# Set permissions
RUN chmod +x /app/archangel.py

# Expose ports
EXPOSE 8000 8001 8888

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start orchestrator
CMD ["python3", "archangel.py", "--orchestrator-mode"]